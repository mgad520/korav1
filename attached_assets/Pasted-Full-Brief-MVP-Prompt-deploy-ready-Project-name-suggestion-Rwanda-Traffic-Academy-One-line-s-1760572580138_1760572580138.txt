Full — Brief MVP Prompt (deploy-ready)

Project name (suggestion): Rwanda Traffic Academy
One-line summary: Mobile-first web app that teaches Rwanda traffic rules with lessons and image-based MCQs (practice + timed mock exams), subscription gating for unlimited mocks & certificates, and weekly progress reports in the user account.

Goal (1 line)

Help learner drivers pass the Rwanda driving theory exam by providing focused lessons, randomized MCQ single-select image-based quizzes, performance tracking, and paid mock exams with certificates.

Target users

Learner drivers preparing for the Rwandan driving theory exam.

Driving instructors / schools (future institutional accounts).

Parents of learner drivers.

Core pages (MVP)

Ahabanza (Home): hero, featured modules, progress summary, CTAs.

Inyigisho (Lessons): modules → lesson viewer (HTML + images), mark complete, “Try Quiz” CTA.

Ibibazo (Quizzes): practice mode (immediate feedback) + mock mode (timed, randomized, graded). Marks/result page with breakdown & certificate CTA.

Konte (Account): profile, subscription status, attempt history, weekly progress reports, certificate downloads.

Core features (MVP)

Auth: signup, login, password reset (JWT + bcrypt).

Lesson content: modules and lessons, free/paid flags, media support.

Question bank: image-capable MCQ single-select questions, choices with is_correct.

Practice quizzes: configurable N questions, immediate feedback.

Mock exams: timed (e.g., 40 Q, 45 min), randomized, server-graded, passing threshold 80%; gated to paid plans.

Marks page: score, percent, pass/fail, per-question breakdown, explanations, time taken.

Certificates: PDF certificate for passed mock (subscribers only).

Subscriptions: weekly & monthly plans (Stripe); server-side gating.

Admin import: CSV import for questions and lessons.

Weekly progress report: per-user weekly metrics visible in Konte & exportable PDF/CSV.

Basic analytics: MAU, conversion rate, quiz completions.

Business rules (minimal)

Freemium: free lessons + limited practice quizzes per day.

Paid: weekly/monthly unlock unlimited mocks + downloadable certificates.

Mock gating: server validates subscription before issuing mock or certificate.

Passing rule: ≥80% to pass (configurable).

Week definition for reports: Mon 00:00 — Sun 23:59 (Africa/Kigali).

Tech stack (MVP)

Frontend: React (separate CSS files; mobile-first).

Backend: Node.js + Express.

Database: MySQL (existing DB).

Payments: Stripe (card). Add MTN/Airtel Mobile Money later.

PDF generation: Puppeteer or PDFKit.

Host: Vercel (frontend), Render/Railway/DO (backend), managed MySQL (PlanetScale/AWS RDS).

Auth: JWT access + refresh tokens.

Minimal data model (high level)

users, modules, lessons, questions, choices, attempts, attempt_answers, plans, subscriptions, weekly_reports, payments.

Essential API endpoints (examples)

POST /api/auth/register, POST /api/auth/login

GET /api/modules, GET /api/lessons/:id

GET /api/quizzes?mode=practice&topic=&count=10

POST /api/attempts → grade & return result

GET /api/attempts/:id → detailed marks

GET /api/users/me/reports/weekly?weeks=4

POST /api/payments/create-session, POST /api/webhooks/payment

Acceptance criteria (must pass)

Auth works; Ahabanza and Inyigisho render for users.

Practice quiz: user can start, answer, get immediate feedback; attempt saved.

Mock exam: for subscribers — timed, auto-saved, server-graded; Marks page shows correct breakdown.

Certificate PDF generated & downloadable only when mock passed and user active subscriber.

Konte shows weekly progress report and attempt history; user can export PDF/CSV.

Launch checklist (short)

Seed content: 8 modules, ~200+ questions (mix image/no-image).

Build lesson viewer + progress marking.

Implement quiz flow (client state + POST /api/attempts grading).

Integrate Stripe + subscription gating.

Certificate PDF generator + Konte reports UI.

Admin CSV import for questions.

Monitoring & error logging.

Key metrics (first 30 days)

MAU, free→paid conversion rate, number of mock exam completions, certificate downloads, avg quiz score.

Pricing (example)

Weekly trial: small price (e.g., RWF 2,000) — unlock week of unlimited mocks.

Monthly: e.g., RWF 6,000 — monthly unlimited mocks & certificates. (Adjust after market testing.)

First 3 tangible dev tasks (priority)

Auth + Konte basic endpoints + UI (profile & subscription state).

Lesson viewer + progress marking + modules API.

Quiz engine: GET /api/quizzes (no answers), frontend question UI, POST /api/attempts grading & MarksPage.

UX rules & constraints (quick)

MCQ single-select with radio buttons — only one correct.

Image-based questions show image above text; support zoom & alt text fallback.

Shuffle choices visually; grade by choice_id on server.

Practice mode: allow per-question immediate feedback. Mock mode: reveal explanations only after submission.